<jqa:jqassistant-rules xmlns:jqa="http://www.buschmais.com/jqassistant/core/analysis/rules/schema/v1.0">

    <concept id="slice:User">
        <description>Labels all classes in .user packages as SLICE and USER.</description>
        <cypher><![CDATA[
            MATCH (p:PACKAGE)-[:CONTAINS*]->(c:CLASS)
            WHERE p.FQN =~ {packageExpression}
            SET c:SLICE:USER
            RETURN c AS class
        ]]></cypher>
        <parameter name="packageExpression" type="string" value=".*\.user"/>
    </concept>

    <concept id="slice:Cart">
        <description>Labels all classes in .cart packages as SLICE and CART.</description>
        <cypher><![CDATA[
            MATCH (p:PACKAGE)-[:CONTAINS*]->(c:CLASS)
            WHERE p.FQN =~ {packageExpression}
            SET c:SLICE:CART
            RETURN c AS class
        ]]></cypher>
        <parameter name="packageExpression" type="string" value=".*\.cart"/>
    </concept>

    <constraint id="slice:User">
        <requiresConcept refId="slice:User"/>
        <requiresConcept refId="slice:Cart"/>
        <description>Classes in slice User must have only dependencies to classes in slice User.</description>
        <cypher><![CDATA[
            MATCH p=shortestPath((c:CLASS:SLICE:USER)-[*]->(d:CLASS:SLICE))
            WHERE NOT (
              d:USER
            )
            RETURN extract(n in nodes(p) : n.FQN) as path
        ]]></cypher>
    </constraint>

    <constraint id="slice:Cart">
        <requiresConcept refId="slice:User"/>
        <requiresConcept refId="slice:Cart"/>
        <description>Classes in slice Cart must have only dependencies to classes in slices Cart or User.</description>
        <cypher><![CDATA[
            MATCH p=shortestPath((c:CLASS:SLICE:CART)-[*]->(d:CLASS:SLICE))
            WHERE NOT (
              d:CART
              OR d:SLICE:USER
            )
            RETURN extract(n in nodes(p) : n.FQN) as path
        ]]></cypher>
    </constraint>

</jqa:jqassistant-rules>