<jqa:jqassistant-rules xmlns:jqa="http://www.buschmais.com/jqassistant/core/analysis/rules/schema/v1.0">

    <concept id="slice:User">
        <description>Labels all types in .user packages as SLICE and USER.</description>
        <cypher><![CDATA[
            MATCH (p:PACKAGE)-[:CONTAINS*]->(t:TYPE)
            WHERE p.FQN =~ {packageExpression}
            SET t:SLICE:USER
            RETURN t AS type
        ]]></cypher>
        <parameter name="packageExpression" type="string" value=".*\.user"/>
    </concept>

    <concept id="slice:Cart">
        <description>Labels all types in .cart packages as SLICE and CART.</description>
        <cypher><![CDATA[
            MATCH (p:PACKAGE)-[:CONTAINS*]->(t:TYPE)
            WHERE p.FQN =~ {packageExpression}
            SET t:SLICE:CART
            RETURN t AS type
        ]]></cypher>
        <parameter name="packageExpression" type="string" value=".*\.cart"/>
    </concept>

    <constraint id="slice:User">
        <requiresConcept refId="slice:User"/>
        <requiresConcept refId="slice:Cart"/>
        <description>Types in slice User must have only dependencies to types in slice User.</description>
        <cypher><![CDATA[
            MATCH p=shortestPath((t:TYPE:SLICE:USER)-[*]->(d:TYPE:SLICE))
            WHERE NOT (
              d:USER
            )
            RETURN extract(n in nodes(p) : n.FQN) as path
        ]]></cypher>
    </constraint>

    <constraint id="slice:Cart">
        <requiresConcept refId="slice:User"/>
        <requiresConcept refId="slice:Cart"/>
        <description>Types in slice Cart must have only dependencies to types in slices Cart or User.</description>
        <cypher><![CDATA[
            MATCH p=shortestPath((t:TYPE:SLICE:CART)-[*]->(d:TYPE:SLICE))
            WHERE NOT (
              d:CART
              OR d:SLICE:USER
            )
            RETURN extract(n in nodes(p) : n.FQN) as path
        ]]></cypher>
    </constraint>

</jqa:jqassistant-rules>